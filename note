#!/usr/bin/env bash

NOTES="content/thoughts"
ARGS=(search edit new)
EDITOR="${EDITOR:-vi}"

_exists() {
    id="$1"
    if [[ -z "$id" ]]; then
        echo "missing identifier"
        return 1
    fi

    path="$NOTES/$id.md"
    if [[ ! -r "$path" ]]; then
        echo "note '$id' not found"
        return 1
    fi
}

_list() {
    # might not work with BSD `find`
    find "$NOTES" -type d -regextype posix-egrep -regex "$NOTES/[0-9]{14}" -print0
}

_isosec() {
    date -u +%Y%m%d%H%M%S
}

_have() { type "$1" &>/dev/null; }

comp() {
    if [[ "$3" == "edit" ]]; then
        readarray -d '' notes < <(_list)
        for n in "${notes[@]}"; do
            n="${n##*/}"
            [[ "${n:0:${#2}}" == "${2,,}" ]] && echo "$n"
        done

        return
    fi

    [[ "$1" != "$3" ]] && return

    for arg in "${ARGS[@]}"; do
        [[ "${arg:0:${#2}}" == "${2,,}" ]] && echo "$arg"
    done
}

search() {
    if [[ "${#@}" -eq 0 ]]; then
        echo "empty query"
        exit 1
    fi

    for word in "$@"; do
        query="$query.*$word.*"
    done

    declare -a list

    while IFS=$'\n' read -r line; do
        head="${line##*title: }"
        file="${line%%:*}"

        [[ "$file" =~ [0-9]{14} ]]
        id="${BASH_REMATCH[0]}"

        list+=("$head ($id)")
    done < <(grep -m 1 -iHE "^title:\s$query\$" "$NOTES"/2*.md)

    select i in "${list[@]}"; do
        [[ "$i" =~ [0-9]{14} ]]
        id="${BASH_REMATCH[0]}"
        edit "$id"
        break
    done
}

edit() {
    id="$1"
    if ! _exists "$id"; then
        exit 1
    fi

    exec "$EDITOR" "$NOTES/$id.md"
}

new() {
    if ! _have hugo; then
        echo "hugo binary not found in PATH"
        exit 1
    fi
    file="$NOTES/$(_isosec).md"
    hugo new content "$file"
    exec "$EDITOR" "$file"
}

if [[ -n "$COMP_LINE" ]]; then
    comp "$@"
    exit 0
fi

arg="$1"; shift

case "$arg" in
    search) search "$@" ;;
    edit)   edit "$1" ;;
    new)    new ;;
    *)      echo "invalid argument" && exit 1 ;;
esac
